openapi: "3.0.0"
info:
  title: "WineApp API"
  version: "1.0.0"
  description: "API for managing products in WineApp"
paths:
  /api/products:
    get:
      summary: "Get all products"
      tags:
        - "products"
      parameters:
        - name: "limit"
          in: "query"
          description: "Limit the number of products returned by the API"
          required: false
          schema:
            type: "integer"
            default: 10
      responses:
        200:
          description: "List of products"
          content:
            application/json:
              schema:
                type: "array"
                items:
                  $ref: "#/components/schemas/products"
    post:
      summary: "Create a new product"
      tags:
        - "products"
      parameters:
        - name: "product"
          in: "path"
          description: "Product to be created"
          required: true
          schema:
            $ref: "#/components/schemas/products"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/products"
      responses:
        201:
          description: "Product created"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
  /api/products/{pid}:
    get:
      summary: "Get a product by id"
      tags:
        - "products"
      parameters:
        - name: "pid"
          in: "path"
          description: "Product id"
          required: true
          schema:
            type: "string"
      security:
        - bearerAuth: []
      responses:
        200:
          description: "Product found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
        404:
          description: "Product not found"
    put:
      summary: "Update a product by id"
      tags:
        - "products"
      parameters:
        - name: "pid"
          in: "path"
          description: "Product id"
          required: true
          schema:
            type: "string"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/products"
      responses:
        200:
          description: "Product updated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/products"
        404:
          description: "Product not found"
    delete:
      summary: "Delete a product by id"
      tags:
        - "products"
      parameters:
        - name: "pid"
          in: "path"
          description: "Product id"
          required: true
          schema:
            type: "string"
      responses:
        204:
          description: "Product deleted"
        404:
          description: "Product not found"
components:
  schemas:
    products:
      type: "object"
      properties:
        _id:
          type: #objetID
            "object" # ObjetcId from MongoDB
          description: "Id auto-generated by MongoDB"
        title:
          type: "string"
        description:
          type: "string"
        code:
          type: "string"
        price:
          type: "number"
          format: "double"
        status:
          type: "string"
        stock:
          type: "integer"
        category:
          type: "string"
        thumbnail:
          type: "array"
      required:
        - code
        - title
        - description
        - price
        - stock
        - category
      example:
        _id: "5f5f3b3b4b3b3b3b3b3b3b3b"
        title: "Wine"
        description: "A bottle of wine"
        code: "WINE"
        price: 10.0
        status: "active"
        stock: 100
        category: "wine"
        thumbnail: ["https://www.wine.com.ar/Public/img/image.jpg"]
